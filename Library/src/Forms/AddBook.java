/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import Classes.Database;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.sql.*;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author France
 */
public class AddBook extends javax.swing.JFrame {

    private final JFileChooser OpenFileChooser;
    private final JFileChooser OpenFileChooser2;
    private BufferedImage originalBI;
    private File sourceFile;
    private static final String connectionStr = "jdbc:mysql://localhost:3306/libraryjava";
    private static final String username = "IT117";
    private static final String password = "meme";
    
    private JFrame backFrame;
    /**
     * Creates new form AddBook
     */
    public AddBook(JFrame backFrame) {
        this.backFrame = backFrame;
        OpenFileChooser = new JFileChooser();
        OpenFileChooser.setFileFilter(new FileNameExtensionFilter("images", "jpg", "png"));
        OpenFileChooser2 = new JFileChooser();
        OpenFileChooser2.setFileFilter(new FileNameExtensionFilter("images", "jpg", "png"));
        initComponents();
        jTable2.setDefaultEditor(Object.class, null);
        loadGenre();
        loadTables();
        loadShelf();
        disableAdd();
        disableEdit();
    }
    

    
    void loadGenre(){
        try {
            String sqlStatement = "select * from genre";
            Connection dbCon = Database.DBConnection();
            Statement dbCom = dbCon.createStatement();
            ResultSet sqlRecord = dbCom.executeQuery(sqlStatement);
            while(sqlRecord.next()){
                cmbGenre.addItem(sqlRecord.getString("genreName"));
                cmbGenre1.addItem(sqlRecord.getString("genreName"));
            }
            dbCom.close();
            dbCon.close();
            cmbGenre.setSelectedIndex(-1);
            cmbGenre1.setSelectedIndex(-1);
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    
    void loadTables(){
        String sqlStatement = "select isbn as ISBN, title as Title,shelfName as shelf,genreName as genre, summary as Summary,length,publicationDate,publicationInfo,imageLocation as Image from bookInfo,genre,shelf where genreID = genre.id && shelfID = shelf.id";
        try {
            Connection dbCon = Database.DBConnection();
            Statement dbCom = dbCon.createStatement();
            ResultSet sqlRecord = dbCom.executeQuery(sqlStatement);
            jTable2.setModel(DbUtils.resultSetToTableModel(sqlRecord));
            dbCom.close();
            dbCon.close();
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    
    void loadShelf(){
      try {
            String sqlStatement = "select * from shelf";
            Connection dbCon = Database.DBConnection();
            Statement dbCom = dbCon.createStatement();
            ResultSet sqlRecord = dbCom.executeQuery(sqlStatement);
            while(sqlRecord.next()){
                cmbShelf.addItem(sqlRecord.getString("shelfName"));
                cmbShelf1.addItem(sqlRecord.getString("shelfName"));
            }
            dbCom.close();
            dbCon.close();
            cmbShelf.setSelectedIndex(-1);
            cmbShelf1.setSelectedIndex(-1);
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtisbn = new javax.swing.JTextField();
        txtTitle = new javax.swing.JTextField();
        txtAuthor = new javax.swing.JTextField();
        txtLength = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cmbGenre = new javax.swing.JComboBox<>();
        txtPubdate = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtpubInfo = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtSumm = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtAlt = new javax.swing.JTextArea();
        cmdSave = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        cmdOpen = new javax.swing.JButton();
        imageCon = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cmbShelf = new javax.swing.JComboBox<>();
        cmdCheck = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        cmbStatus = new javax.swing.JComboBox<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtisbn1 = new javax.swing.JTextField();
        txtTitle1 = new javax.swing.JTextField();
        txtAuthor1 = new javax.swing.JTextField();
        txtLength1 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        cmbGenre1 = new javax.swing.JComboBox<>();
        txtPubdate1 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtpubInfo1 = new javax.swing.JTextArea();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        txtSumm1 = new javax.swing.JTextArea();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        txtAlt1 = new javax.swing.JTextArea();
        cmdUpdate = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        cmdOpen1 = new javax.swing.JButton();
        imageCon1 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        cmbShelf1 = new javax.swing.JComboBox<>();
        cmdCheck1 = new javax.swing.JButton();
        cmdDel = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        cmbStatus2 = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        cmdBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowClosing(java.awt.event.WindowEvent evt)
            {
                formWindowClosing(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jLabel1.setText("ISBN:");

        jLabel2.setText("TItle:");

        jLabel3.setText("Author:");

        jLabel4.setText("Genre:");

        jLabel5.setText("Length:");

        txtisbn.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                txtisbnKeyPressed(evt);
            }
        });

        jLabel6.setText("Publication Date:");

        jLabel8.setText("Publication Info:");

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        txtpubInfo.setColumns(20);
        txtpubInfo.setLineWrap(true);
        txtpubInfo.setRows(5);
        txtpubInfo.setWrapStyleWord(true);
        jScrollPane2.setViewportView(txtpubInfo);

        jLabel9.setText("Summary:");

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        txtSumm.setColumns(20);
        txtSumm.setLineWrap(true);
        txtSumm.setRows(5);
        txtSumm.setWrapStyleWord(true);
        jScrollPane3.setViewportView(txtSumm);

        jLabel10.setText("Alternate Titles:");

        txtAlt.setColumns(20);
        txtAlt.setRows(5);
        jScrollPane4.setViewportView(txtAlt);

        cmdSave.setText("Save");
        cmdSave.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cmdSaveActionPerformed(evt);
            }
        });

        jLabel11.setText("Upload Image");

        cmdOpen.setText("Open File...");
        cmdOpen.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cmdOpenActionPerformed(evt);
            }
        });

        jLabel12.setText("Shelf:");

        cmdCheck.setText("Check");
        cmdCheck.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cmdCheckActionPerformed(evt);
            }
        });

        jLabel25.setText("Borrowed");

        cmbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "False", "True" }));
        cmbStatus.setSelectedIndex(-1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtisbn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                            .addComponent(txtTitle, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbGenre, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAuthor, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbShelf, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdCheck))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLength, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPubdate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(cmdSave)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel25)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(161, 161, 161)))))
                .addGap(54, 54, 54)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdOpen))
                    .addComponent(imageCon, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE))
                .addGap(73, 73, 73))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtisbn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(cmdOpen)
                    .addComponent(cmdCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imageCon, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cmbGenre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(cmbShelf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtPubdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25)
                            .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmdSave)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel2);

        jTabbedPane1.addTab("Add Book Info", jScrollPane1);

        jScrollPane6.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jLabel13.setText("ISBN:");

        jLabel14.setText("TItle:");

        jLabel15.setText("Author:");

        jLabel16.setText("Genre:");

        jLabel17.setText("Length:");

        txtisbn1.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                txtisbn1KeyPressed(evt);
            }
        });

        jLabel18.setText("Publication Date:");

        jLabel20.setText("Publication Info:");

        jScrollPane7.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        txtpubInfo1.setColumns(20);
        txtpubInfo1.setLineWrap(true);
        txtpubInfo1.setRows(5);
        txtpubInfo1.setWrapStyleWord(true);
        jScrollPane7.setViewportView(txtpubInfo1);

        jLabel21.setText("Summary:");

        jScrollPane8.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        txtSumm1.setColumns(20);
        txtSumm1.setLineWrap(true);
        txtSumm1.setRows(5);
        txtSumm1.setWrapStyleWord(true);
        jScrollPane8.setViewportView(txtSumm1);

        jLabel22.setText("Alternate Titles:");

        txtAlt1.setColumns(20);
        txtAlt1.setRows(5);
        jScrollPane9.setViewportView(txtAlt1);

        cmdUpdate.setText("Update");
        cmdUpdate.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cmdUpdateActionPerformed(evt);
            }
        });

        jLabel23.setText("Upload Image");

        cmdOpen1.setText("Open File...");
        cmdOpen1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cmdOpen1ActionPerformed(evt);
            }
        });

        jLabel24.setText("Shelf:");

        cmdCheck1.setText("Check");
        cmdCheck1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cmdCheck1ActionPerformed(evt);
            }
        });

        cmdDel.setText("Delete");
        cmdDel.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cmdDelActionPerformed(evt);
            }
        });

        jLabel7.setText("Borrowed");

        cmbStatus2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "False", "True" }));
        cmbStatus2.setSelectedIndex(-1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel15)
                            .addComponent(jLabel14)
                            .addComponent(jLabel13)
                            .addComponent(jLabel24))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtisbn1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                            .addComponent(txtTitle1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbGenre1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAuthor1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbShelf1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdCheck1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLength1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel22)
                            .addComponent(jLabel21)
                            .addComponent(jLabel20)
                            .addComponent(jLabel18)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(cmdUpdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmdDel))
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPubdate1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbStatus2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(54, 54, 54)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdOpen1))
                    .addComponent(imageCon1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(73, 73, 73))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtisbn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(cmdOpen1)
                    .addComponent(cmdCheck1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imageCon1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(txtTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(txtAuthor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(cmbGenre1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24)
                            .addComponent(cmbShelf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(txtLength1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(txtPubdate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cmbStatus2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdUpdate)
                    .addComponent(cmdDel))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 171, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jScrollPane6.setViewportView(jPanel1);

        jTabbedPane1.addTab("Edit Book Info", jScrollPane6);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String []
            {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane10.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 842, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("View Book Info List", jPanel4);

        cmdBack.setText("Back");
        cmdBack.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cmdBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmdBack)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 14, Short.MAX_VALUE)
                .addComponent(cmdBack)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmdDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDelActionPerformed
        deleteData();
        loadTables();
        clrEditAll();
        disableEdit();
    }//GEN-LAST:event_cmdDelActionPerformed

    private void cmdCheck1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCheck1ActionPerformed
        checkID();
    }//GEN-LAST:event_cmdCheck1ActionPerformed

    private void cmdOpen1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOpen1ActionPerformed
        uploadEditPreview();
    }//GEN-LAST:event_cmdOpen1ActionPerformed

    private void cmdUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdUpdateActionPerformed
        checkEditValues();
        loadTables();
    }//GEN-LAST:event_cmdUpdateActionPerformed

    private void txtisbn1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtisbn1KeyPressed
        disableEdit();
        clrEditAll();
    }//GEN-LAST:event_txtisbn1KeyPressed

    private void cmdCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCheckActionPerformed
        checkExist();
    }//GEN-LAST:event_cmdCheckActionPerformed

    private void cmdOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOpenActionPerformed
        uploadPreview();
    }//GEN-LAST:event_cmdOpenActionPerformed

    private void cmdSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSaveActionPerformed
        checkValues();
    }//GEN-LAST:event_cmdSaveActionPerformed

    private void txtisbnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtisbnKeyPressed
        disableAdd();
        clrAll();
    }//GEN-LAST:event_txtisbnKeyPressed

    private void cmdBackActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cmdBackActionPerformed
    {//GEN-HEADEREND:event_cmdBackActionPerformed
        // TODO add your handling code here:
        CloseForm();
    }//GEN-LAST:event_cmdBackActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
    {//GEN-HEADEREND:event_formWindowClosing
        // TODO add your handling code here:
        CloseForm();
    }//GEN-LAST:event_formWindowClosing

    void CloseForm()
    {
        backFrame.setVisible(true);
        this.dispose();
    }
    
    void saveData() {
        String shelfID = "";
        String genreID = "";
        int status = 0;
        String sqlStatement = "select genre.id from genre, bookInfo where genreName = '" + cmbGenre.getSelectedItem() + "';";
        String sqlStatement2 = "select shelf.id from shelf, bookInfo where shelfName = '" + cmbShelf.getSelectedItem() + "';";
        try {
            Connection dbCon = Database.DBConnection();
            Statement dbCom = dbCon.createStatement();
            Statement dbCom2 = dbCon.createStatement();
            ResultSet sqlRecord = dbCom.executeQuery(sqlStatement);
            ResultSet rs = dbCom2.executeQuery(sqlStatement2);
            while (sqlRecord.next()) {
                genreID = sqlRecord.getString(1);
            }
            while (rs.next()) {
                shelfID = rs.getString(1);
            }
            dbCom2.close();
            dbCom.close();
            dbCon.close();
            sqlStatement = "insert into bookInfo(isbn, title, author, shelfID, genreID, summary, length, alternatetitle, publicationDate, publicationInfo, imageLocation, isBorrowed)";
            sqlStatement += "values ('" + txtisbn.getText() + "','" + txtTitle.getText() + "','" + txtAuthor.getText() + "'," + shelfID + "," + genreID + ",'" + txtSumm.getText() + "'," + txtLength.getText() + ",'" + txtAlt.getText() + "','" + txtPubdate.getText() + "','" + txtpubInfo.getText() + "','\\\\src\\\\Images\\\\" + OpenFileChooser.getSelectedFile().getName() + "',"+status+");";
            Database n = new Database();
            n.ExecuteStatement(sqlStatement);
            loadTables();
            copyImage();
            clrAll();
            disableAdd();
            txtisbn.setText("");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        if(cmbStatus.getSelectedItem() == "True"){
            status = 1;
        }else{
            status = 0;
        }
        

    }

    void checkID() {
        try {
            String genreID = "";
            String shelfID = "";
            String sqlStatement = "select * from bookInfo where isbn ='" + txtisbn1.getText() + "';";
            Connection dbCon = Database.DBConnection();
            Statement dbCom = dbCon.createStatement();
            ResultSet sqlRecord = dbCom.executeQuery(sqlStatement);
            if (sqlRecord != null && sqlRecord.next()) {
                enableEdit();
                do {
                    txtTitle1.setText(sqlRecord.getString("title"));
                    txtAuthor1.setText(sqlRecord.getString("author"));
                    txtLength1.setText(sqlRecord.getString("length"));
                    txtSumm1.setText(sqlRecord.getString("summary"));
                    txtAlt1.setText(sqlRecord.getString("alternateTitle"));
                    txtpubInfo1.setText(sqlRecord.getString("publicationInfo"));
                    txtPubdate1.setText(sqlRecord.getString("publicationDate"));
                    genreID = sqlRecord.getString("genreID");
                    shelfID = sqlRecord.getString("shelfID");
                    if(sqlRecord.getInt("isBorrowed") == 0){
                        cmbStatus2.setSelectedItem("False");
                    }else{
                        cmbStatus2.setSelectedItem("True");
                    }
                    originalBI = ImageIO.read(new File(System.getProperty("user.dir") + sqlRecord.getString("imageLocation")));
                    Image dimg = originalBI.getScaledInstance(imageCon1.getWidth(), imageCon1.getHeight(), Image.SCALE_SMOOTH);
                    ImageIcon icon = new ImageIcon(dimg);
                    imageCon1.setIcon(icon);
                } while (sqlRecord.next());
            } else {
                disableEdit();
                JOptionPane.showMessageDialog(null, "ID Does not exist");
            }
            String sqlStatement2 = "select genreName from genre where id=" + genreID + ";";
            String sqlStatement3 = "select shelfName from shelf where id=" + shelfID + ";";
            Statement dbCom2 = dbCon.createStatement();
            Statement dbCom3 = dbCon.createStatement();
            ResultSet sqlRecord2 = dbCom2.executeQuery(sqlStatement2);
            ResultSet sqlRecord3 = dbCom3.executeQuery(sqlStatement3);

            while (sqlRecord2.next()) {
                cmbGenre1.setSelectedItem(sqlRecord2.getString("genreName"));
            }
            while (sqlRecord3.next()) {
                cmbShelf1.setSelectedItem(sqlRecord3.getString("shelfName"));
            }
            dbCom2.close();
            dbCom3.close();
            dbCom.close();
            dbCon.close();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    
    void checkValues(){
        String msg = "";
        if (txtisbn.getText().isEmpty()) {
            msg += "ISBN is Empty\n";
        }
        if (txtTitle.getText().isEmpty()) {
            msg += "Title is Empty\n";
        }
        if (txtpubInfo.getText().isEmpty()) {
            msg += "Publication Info is Empty\n";
        }
        if (txtLength.getText().isEmpty()) {
            msg += "Length is Empty\n";
        }
        if (cmbGenre.getSelectedIndex() == -1) {
            msg += "Genre is Empty\n";
        }
        if (cmbShelf.getSelectedIndex() == -1) {
            msg += "Shelf is Empty\n";
        }
        if (txtSumm.getText().isEmpty()) {
            msg += "Summary is Empty\n";
        }
        if (txtAlt.getText().isEmpty()) {
            msg += "Alternate Titles is Empty\n";
        }
        if (imageCon.getIcon() == null) {
            msg += "No uploaded Image\n";
        }
        if (msg !="") {
            
            JOptionPane.showMessageDialog(this, msg);
        } else {
           saveData();
        }

    }
        
    void checkEditValues(){
        String msg = "";
        if (txtTitle1.getText().isEmpty())
        {
            msg +="Title is Empty\n";
        }
        if (txtpubInfo1.getText().isEmpty())
        {
            msg +="Publication Info is Empty\n";
        }
        if (txtLength1.getText().isEmpty())
        {
            msg +="Length is Empty\n";
        }
        if (cmbGenre1.getSelectedIndex() == -1){
            msg +="Genre is Empty\n";
        }
        if (cmbShelf1.getSelectedIndex() == -1){
            msg +="Shelf is Empty\n";
        }
        if (txtSumm1.getText().isEmpty())
        {
            msg +="Summary is Empty\n";
        }
        if (txtAlt1.getText().isEmpty())
        {
            msg +="Alternate Titles is Empty\n";
        }
        if (imageCon1.getIcon() == null)
        {
            msg +="No uploaded Image\n";
        }
        if (msg != ""){
            JOptionPane.showMessageDialog(null, msg);
        }
        else{
            updateData();
        }
       
    }
    
    void updateData() {
        
        String genreID = "";
        String shelfID = "";
        String prevImg = "";
        String currImg = System.getProperty("user.dir") + "\\src\\Images";
        int status = 0;
        String sqlStatement = "select id from genre where genreName = '" + cmbGenre1.getSelectedItem() + "';";
        String sqlStatement2 = "select id from shelf where shelfName = '" + cmbShelf1.getSelectedItem() + "';";
        String sqlStatement3 = "select imageLocation from bookInfo where isbn = '"+txtisbn1.getText()+"';";
        try {
            Connection dbCon = Database.DBConnection();
            Statement dbCom = dbCon.createStatement();
            Statement dbCom2 = dbCon.createStatement();
            Statement dbCom3 = dbCon.createStatement();
            ResultSet sqlRecord = dbCom.executeQuery(sqlStatement);
            ResultSet rs = dbCom2.executeQuery(sqlStatement2);
            ResultSet rs2 = dbCom3.executeQuery(sqlStatement3);
            while (sqlRecord.next()) {
                genreID = sqlRecord.getString(1);
            }
            while (rs.next()) {
                shelfID = rs.getString(1);
            }
            while(rs2.next()){
                prevImg = System.getProperty("user.dir") + rs2.getString("imageLocation");
            }
            dbCom3.close();
            dbCom2.close();
            dbCom.close();
            dbCon.close();
            currImg += OpenFileChooser2.getSelectedFile().getAbsolutePath();
            copyEditImage(prevImg, currImg, genreID, shelfID, status);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
    }

    void checkExist() {
        try {
            String sqlStatement = "select isbn from bookInfo where isbn ='" + txtisbn.getText() + "';";
            Connection dbCon = Database.DBConnection();
            Statement dbCom = dbCon.createStatement();
            ResultSet sqlRecord = dbCom.executeQuery(sqlStatement);
            if (!sqlRecord.next()) {
                JOptionPane.showMessageDialog(null, "ISBN does not exist");
                enableAdd();
            } else {
                JOptionPane.showMessageDialog(null, "ISBN already exists");
                disableAdd();
            }
            dbCom.close();
            dbCon.close();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }

    }

    void disableAdd() {
        txtTitle.setEnabled(false);
        txtAuthor.setEnabled(false);
        cmbGenre.setEnabled(false);
        cmbShelf.setEnabled(false);
        txtLength.setEnabled(false);
        txtPubdate.setEnabled(false);
        txtpubInfo.setEnabled(false);
        txtSumm.setEnabled(false);
        txtAlt.setEnabled(false);
        cmdSave.setEnabled(false);
        cmbStatus.setEnabled(false);
        cmdOpen.setEnabled(false);
    }

    void disableEdit() {
        txtTitle1.setEnabled(false);
        txtAuthor1.setEnabled(false);
        cmbGenre1.setEnabled(false);
        cmbShelf1.setEnabled(false);
        txtLength1.setEnabled(false);
        txtPubdate1.setEnabled(false);
        txtpubInfo1.setEnabled(false);
        txtSumm1.setEnabled(false);
        txtAlt1.setEnabled(false);
        cmdUpdate.setEnabled(false);
        cmdDel.setEnabled(false);
        cmbStatus2.setEnabled(false);
        cmdOpen1.setEnabled(false);
    }
    
    void enableEdit() {
        txtTitle1.setEnabled(true);
        txtAuthor1.setEnabled(true);
        cmbGenre1.setEnabled(true);
        cmbShelf1.setEnabled(true);
        txtLength1.setEnabled(true);
        txtPubdate1.setEnabled(true);
        txtpubInfo1.setEnabled(true);
        txtSumm1.setEnabled(true);
        txtAlt1.setEnabled(true);
        cmdUpdate.setEnabled(true);
        cmdDel.setEnabled(true);
        cmbStatus2.setEnabled(true);
        cmdOpen1.setEnabled(true);
    }

    void enableAdd() {
        txtTitle.setEnabled(true);
        txtAuthor.setEnabled(true);
        cmbGenre.setEnabled(true);
        cmbShelf.setEnabled(true);
        txtLength.setEnabled(true);
        txtPubdate.setEnabled(true);
        txtpubInfo.setEnabled(true);
        txtSumm.setEnabled(true);
        txtAlt.setEnabled(true);
        cmdSave.setEnabled(true);
        cmbStatus.setEnabled(true);
        cmdOpen.setEnabled(true);
    }

    void uploadEditPreview() {
        int returnValue = OpenFileChooser2.showOpenDialog(this);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            try {
                originalBI = ImageIO.read(OpenFileChooser2.getSelectedFile());
                Image dimg = originalBI.getScaledInstance(imageCon1.getWidth(), imageCon1.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon icon = new ImageIcon(dimg);
                imageCon1.setIcon(icon);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Invalid File Selected");
            }
        }
    }

    void uploadPreview() {
        int returnValue = OpenFileChooser.showOpenDialog(this);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            try {
                originalBI = ImageIO.read(OpenFileChooser.getSelectedFile());
                Image dimg = originalBI.getScaledInstance(imageCon.getWidth(), imageCon.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon icon = new ImageIcon(dimg);
                imageCon.setIcon(icon);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Invalid File Selected");
            }
        }
    }

    void copyImage() {
        try {
            sourceFile = new File(OpenFileChooser.getSelectedFile().getAbsolutePath());
            Path dest = Paths.get(System.getProperty("user.dir") + "\\src\\Images");
            Files.copy(sourceFile.toPath(), dest.resolve(sourceFile.toPath().getFileName()));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "image name already in use");
        }
    }
    
    void copyEditImage(String prevImg, String currImg, String genreID, String shelfID, int status ) {
        try {
            sourceFile = new File(OpenFileChooser2.getSelectedFile().getAbsolutePath());
            Path dest = Paths.get(System.getProperty("user.dir") + "\\src\\Images");
            Files.copy(sourceFile.toPath(), dest.resolve(sourceFile.toPath().getFileName()));
            if (prevImg != currImg) {
                File f = new File(prevImg);
                f.delete();
            }
            if (cmbStatus2.getSelectedItem() == "True") {
                status = 1;
            } else {
                status = 0;
            }
            String sqlStatement = "update bookInfo set title ='" + txtTitle1.getText() + "', author = '" + txtAuthor1.getText() + "', genreID =" + genreID + ", summary='" + txtSumm1.getText() + "', length=" + txtLength1.getText() + ",alternateTitle ='" + txtAlt1.getText() + "', publicationDate ='" + txtPubdate1.getText() + "', publicationInfo = '" + txtpubInfo1.getText() + "', imageLocation = '\\\\src\\\\Images\\\\" + OpenFileChooser2.getSelectedFile().getName() + "',shelfID = " + shelfID + ", isBorrowed = " + status + " where isbn ='" + txtisbn1.getText() + "';";
            Database n = new Database();
            n.ExecuteStatement(sqlStatement);
            clrEditAll();
            disableEdit();
         } catch (Exception e) {
             JOptionPane.showMessageDialog(null, "Image name already in use");
         }
    }

    void clrAll() {
        txtTitle.setText("");
        txtAuthor.setText("");
        cmbGenre.setSelectedIndex(-1);
        cmbShelf.setSelectedIndex(-1);
        txtLength.setText("");
        txtPubdate.setText("");
        txtpubInfo.setText("");
        txtSumm.setText("");
        txtAlt.setText("");
        imageCon.setIcon(null);
        OpenFileChooser.setSelectedFile(null);
        cmbStatus2.setSelectedIndex(-1);
    }

    void clrEditAll() {
        txtTitle1.setText("");
        txtAuthor1.setText("");
        cmbGenre1.setSelectedIndex(-1);
        cmbShelf1.setSelectedIndex(-1);
        txtLength1.setText("");
        txtPubdate1.setText("");
        txtpubInfo1.setText("");
        txtSumm1.setText("");
        txtAlt1.setText("");
        imageCon1.setIcon(null);
        OpenFileChooser2.setSelectedFile(null);
        cmbStatus2.setSelectedIndex(-1);
    }   

    void deleteData() {
        String sqlStatement = "delete from bookInfo where isbn = '" + txtisbn1.getText() + "';";
        Database n = new Database();
        n.ExecuteStatement(sqlStatement);
    }
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddBook(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbGenre;
    private javax.swing.JComboBox<String> cmbGenre1;
    private javax.swing.JComboBox<String> cmbShelf;
    private javax.swing.JComboBox<String> cmbShelf1;
    private javax.swing.JComboBox<String> cmbStatus;
    private javax.swing.JComboBox<String> cmbStatus2;
    private javax.swing.JButton cmdBack;
    private javax.swing.JButton cmdCheck;
    private javax.swing.JButton cmdCheck1;
    private javax.swing.JButton cmdDel;
    private javax.swing.JButton cmdOpen;
    private javax.swing.JButton cmdOpen1;
    private javax.swing.JButton cmdSave;
    private javax.swing.JButton cmdUpdate;
    private javax.swing.JLabel imageCon;
    private javax.swing.JLabel imageCon1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea txtAlt;
    private javax.swing.JTextArea txtAlt1;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtAuthor1;
    private javax.swing.JTextField txtLength;
    private javax.swing.JTextField txtLength1;
    private javax.swing.JTextField txtPubdate;
    private javax.swing.JTextField txtPubdate1;
    private javax.swing.JTextArea txtSumm;
    private javax.swing.JTextArea txtSumm1;
    private javax.swing.JTextField txtTitle;
    private javax.swing.JTextField txtTitle1;
    private javax.swing.JTextField txtisbn;
    private javax.swing.JTextField txtisbn1;
    private javax.swing.JTextArea txtpubInfo;
    private javax.swing.JTextArea txtpubInfo1;
    // End of variables declaration//GEN-END:variables
}
