package Forms;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author jncor
 */
import Classes.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import net.proteanit.sql.DbUtils;
public class LibraryBooksBorrower extends JFrame
{
    private JFrame backFrame;
    private String userID;

    /**
     * Creates new form LibraryBooks
     * @param a
     */
    public LibraryBooksBorrower(JFrame a, String userID)
    {
        backFrame = a;
        this.userID = userID;
        initComponents();
        PopulateCB();
    }
    public LibraryBooksBorrower()
    {
        initComponents();
    }
    
    private void PopulateCB()
    {
        try 
        {
            String sqlStatement = "SELECT genreName from genre;";
            String sqlStatement2 = "SELECT shelfName from shelf;";
            Connection dbCon = Database.DBConnection();
            Statement dbCom = dbCon.createStatement();
            ResultSet sqlRecord = dbCom.executeQuery(sqlStatement);
            
            ddGenre.addItem("");
            while (sqlRecord.next())
            {
                String genre = sqlRecord.getString("genreName");
                ddGenre.addItem(genre);
            }
            
            sqlRecord = dbCom.executeQuery(sqlStatement2);
            
            ddShelf.addItem("");
            while (sqlRecord.next())
            {
                String shelf = sqlRecord.getString("shelfName");
                ddShelf.addItem(shelf);
            }
            
            dbCom.close();
            dbCon.close();
        }
        catch (SQLException e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbBooks = new javax.swing.JTable();
        cmdBack = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0));
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtTitle = new javax.swing.JTextField();
        txtISBN = new javax.swing.JTextField();
        txtAuthor = new javax.swing.JTextField();
        cmdSearch = new javax.swing.JButton();
        ddShelf = new javax.swing.JComboBox<>();
        ddGenre = new javax.swing.JComboBox<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tbBooks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {},
                {},
                {},
                {}
            },
            new String []
            {

            }
        ));
        tbBooks.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                tbBooksMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbBooks);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 600, 270));

        cmdBack.setText("Back");
        cmdBack.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cmdBackActionPerformed(evt);
            }
        });
        getContentPane().add(cmdBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 60));
        getContentPane().add(filler1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 490, 620, 10));

        jLabel1.setText("Shelf Location");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 80, -1, 20));

        jLabel2.setText("ISBN");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, -1, 20));

        jLabel3.setText("Title");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140, -1, 20));

        jLabel4.setText("Author");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, -1, 20));

        jLabel5.setText("Genre");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 110, -1, 20));
        getContentPane().add(txtTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 140, 100, -1));
        getContentPane().add(txtISBN, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 80, 100, -1));
        getContentPane().add(txtAuthor, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 110, 100, -1));

        cmdSearch.setText("Search");
        cmdSearch.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cmdSearchActionPerformed(evt);
            }
        });
        getContentPane().add(cmdSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 180, 80, 30));

        getContentPane().add(ddShelf, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 80, 100, -1));

        getContentPane().add(ddGenre, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 110, 100, -1));

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmdBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBackActionPerformed
        backFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_cmdBackActionPerformed

    private void cmdSearchActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cmdSearchActionPerformed
    {//GEN-HEADEREND:event_cmdSearchActionPerformed
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            String sqlStatement = "SELECT bookinfo.isbn as ISBN, bookinfo.title as Title, bookinfo.author as Author, shelf.shelfName as Shelf from bookinfo, shelf, genre where bookinfo.shelfID=shelf.id and bookinfo.genreID=genre.id and bookinfo.isbn like '%" + txtISBN.getText() + "%' and bookinfo.title like '%" + txtTitle.getText() + "%' and bookinfo.author like '%" + txtAuthor.getText() + "%' and genre.genreName like '" + ddGenre.getSelectedItem().toString() + "%' and shelf.shelfName like '" + ddShelf.getSelectedItem().toString() + "%';";
            //String sqlStatement = "SELECT bookinfo.isbn, bookinfo.title, bookinfo.author, shelf.shelfName from bookinfo, shelf, genre where bookinfo.shelfID=shelf.id and bookinfo.genreID=genre.id and bookinfo.isbn like '%%' and bookinfo.title like '%%' and bookinfo.author like '%%' and genre.genreName like '%%' and shelf.shelfName like '%%';";
            //String sqlStatement = "SELECT bookinfo.isbn as ISBN, bookinfo.title as Title, bookinfo.author as Author, shelf.shelfName as Shelf from bookinfo, shelf WHERE bookinfo.shelfID=shelf.id and bookinfo.isbn like '%%' and bookinfo.title like '%%' and bookinfo.author like '%%' and shelf.shelfName like '%%';";
            Connection dbCon = Database.DBConnection();
            Statement dbCom = dbCon.createStatement();
            ResultSet bookInfo = dbCom.executeQuery(sqlStatement);
            
               tbBooks.setModel(DbUtils.resultSetToTableModel(bookInfo));

            
            dbCom.close();
            dbCon.close();
        } catch (SQLException | ClassNotFoundException ex)
        {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }//GEN-LAST:event_cmdSearchActionPerformed

    private void tbBooksMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_tbBooksMouseClicked
    {//GEN-HEADEREND:event_tbBooksMouseClicked
        // TODO add your handling code here:
        ViewSpecificBook form = new ViewSpecificBook(this, userID, tbBooks.getValueAt(tbBooks.getSelectedRow(), 0).toString());
        form.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_tbBooksMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(LibraryBooksBorrower.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(LibraryBooksBorrower.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(LibraryBooksBorrower.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(LibraryBooksBorrower.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new LibraryBooksBorrower().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdBack;
    private javax.swing.JButton cmdSearch;
    private javax.swing.JComboBox<String> ddGenre;
    private javax.swing.JComboBox<String> ddShelf;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbBooks;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtISBN;
    private javax.swing.JTextField txtTitle;
    // End of variables declaration//GEN-END:variables
}
